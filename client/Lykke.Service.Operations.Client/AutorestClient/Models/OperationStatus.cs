// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.Operations.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OperationStatus.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OperationStatus
    {
        [EnumMember(Value = "Created")]
        Created,
        [EnumMember(Value = "Accepted")]
        Accepted,
        [EnumMember(Value = "Confirmed")]
        Confirmed,
        [EnumMember(Value = "Completed")]
        Completed,
        [EnumMember(Value = "Canceled")]
        Canceled,
        [EnumMember(Value = "Failed")]
        Failed
    }
    internal static class OperationStatusEnumExtension
    {
        internal static string ToSerializedValue(this OperationStatus? value)
        {
            return value == null ? null : ((OperationStatus)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this OperationStatus value)
        {
            switch( value )
            {
                case OperationStatus.Created:
                    return "Created";
                case OperationStatus.Accepted:
                    return "Accepted";
                case OperationStatus.Confirmed:
                    return "Confirmed";
                case OperationStatus.Completed:
                    return "Completed";
                case OperationStatus.Canceled:
                    return "Canceled";
                case OperationStatus.Failed:
                    return "Failed";
            }
            return null;
        }

        internal static OperationStatus? ParseOperationStatus(this string value)
        {
            switch( value )
            {
                case "Created":
                    return OperationStatus.Created;
                case "Accepted":
                    return OperationStatus.Accepted;
                case "Confirmed":
                    return OperationStatus.Confirmed;
                case "Completed":
                    return OperationStatus.Completed;
                case "Canceled":
                    return OperationStatus.Canceled;
                case "Failed":
                    return OperationStatus.Failed;
            }
            return null;
        }
    }
}
