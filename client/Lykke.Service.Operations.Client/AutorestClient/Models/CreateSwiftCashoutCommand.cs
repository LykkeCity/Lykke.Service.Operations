// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.Operations.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CreateSwiftCashoutCommand
    {
        /// <summary>
        /// Initializes a new instance of the CreateSwiftCashoutCommand class.
        /// </summary>
        public CreateSwiftCashoutCommand()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateSwiftCashoutCommand class.
        /// </summary>
        public CreateSwiftCashoutCommand(decimal volume, SwiftCashoutAssetModel asset = default(SwiftCashoutAssetModel), SwiftCashoutClientModel client = default(SwiftCashoutClientModel), SwiftFieldsModel swift = default(SwiftFieldsModel))
        {
            Asset = asset;
            Volume = volume;
            Client = client;
            Swift = swift;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Asset")]
        public SwiftCashoutAssetModel Asset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Volume")]
        public decimal Volume { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Client")]
        public SwiftCashoutClientModel Client { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Swift")]
        public SwiftFieldsModel Swift { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Asset != null)
            {
                Asset.Validate();
            }
            if (Client != null)
            {
                Client.Validate();
            }
        }
    }
}
