// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Service.Operations.Client.AutorestClient.Models
{
    using Lykke.Service;
    using Lykke.Service.Operations;
    using Lykke.Service.Operations.Client;
    using Lykke.Service.Operations.Client.AutorestClient;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SwiftFieldsModel
    {
        /// <summary>
        /// Initializes a new instance of the SwiftFieldsModel class.
        /// </summary>
        public SwiftFieldsModel()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SwiftFieldsModel class.
        /// </summary>
        public SwiftFieldsModel(string bic, string accNumber, string accName, string accHolderAddress, string bankName, string accHolderCountry, string accHolderZipCode, string accHolderCity)
        {
            Bic = bic;
            AccNumber = accNumber;
            AccName = accName;
            AccHolderAddress = accHolderAddress;
            BankName = bankName;
            AccHolderCountry = accHolderCountry;
            AccHolderZipCode = accHolderZipCode;
            AccHolderCity = accHolderCity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Bic")]
        public string Bic { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccNumber")]
        public string AccNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccName")]
        public string AccName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccHolderAddress")]
        public string AccHolderAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BankName")]
        public string BankName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccHolderCountry")]
        public string AccHolderCountry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccHolderZipCode")]
        public string AccHolderZipCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccHolderCity")]
        public string AccHolderCity { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Bic == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Bic");
            }
            if (AccNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccNumber");
            }
            if (AccName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccName");
            }
            if (AccHolderAddress == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccHolderAddress");
            }
            if (BankName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BankName");
            }
            if (AccHolderCountry == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccHolderCountry");
            }
            if (AccHolderZipCode == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccHolderZipCode");
            }
            if (AccHolderCity == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccHolderCity");
            }
        }
    }
}
