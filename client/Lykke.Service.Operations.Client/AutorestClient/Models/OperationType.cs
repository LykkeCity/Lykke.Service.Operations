// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Service.Operations.Client.AutorestClient.Models
{
    using Lykke.Service;
    using Lykke.Service.Operations;
    using Lykke.Service.Operations.Client;
    using Lykke.Service.Operations.Client.AutorestClient;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OperationType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OperationType
    {
        [EnumMember(Value = "Transfer")]
        Transfer,
        [EnumMember(Value = "VisaCardPayment")]
        VisaCardPayment,
        [EnumMember(Value = "MarketOrder")]
        MarketOrder,
        [EnumMember(Value = "LimitOrder")]
        LimitOrder,
        [EnumMember(Value = "NewOrder")]
        NewOrder
    }
    internal static class OperationTypeEnumExtension
    {
        internal static string ToSerializedValue(this OperationType? value)  =>
            value == null ? null : ((OperationType)value).ToSerializedValue();

        internal static string ToSerializedValue(this OperationType value)
        {
            switch( value )
            {
                case OperationType.Transfer:
                    return "Transfer";
                case OperationType.VisaCardPayment:
                    return "VisaCardPayment";
                case OperationType.MarketOrder:
                    return "MarketOrder";
                case OperationType.LimitOrder:
                    return "LimitOrder";
                case OperationType.NewOrder:
                    return "NewOrder";
            }
            return null;
        }

        internal static OperationType? ParseOperationType(this string value)
        {
            switch( value )
            {
                case "Transfer":
                    return OperationType.Transfer;
                case "VisaCardPayment":
                    return OperationType.VisaCardPayment;
                case "MarketOrder":
                    return OperationType.MarketOrder;
                case "LimitOrder":
                    return OperationType.LimitOrder;
                case "NewOrder":
                    return OperationType.NewOrder;
            }
            return null;
        }
    }
}
